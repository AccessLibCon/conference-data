continue
exit
institution
city
continue
city
continue
exit
confoutput
exit
mappings[conferences[year]]
mapping[conferences[year]]
conferences[year]
location
continue
exit
confcoords
exit
conference
exit
distances.mean.round
distances.mean
exit
distances
exit
distances.median
continue
distances.median
continue
distances.median
continue
distances.median
continue
distances.median
continue
distances.median
continue
distances.median
continue
distances.median
exit
distances.sort.mean.round
distances.sort.mean
distances.sort.median
distances.sort
distances
distances.mean.round
continue
year
distances.mean.round
continue
distances.mean.round
continue
distances.mean.round
continue
distances.mean.round
exit
distances.mean.round
distances.mean.rund
distances.mean
year
distances.median
continue
distances.median
continue
distances.median
continue
distances.median
continue
distances.median
continue
distances.median
continue
distances.median
continue
distances.median
exit
(3/2)
(4/2)
(4/2).round
(3/2).round
distances.sort.median
distances.count
exit
x
exit
x
exit
conf
exit
conf
exit
place
continue
exit
continue
exit
master_place_data.keys.first
master_place_data.keys.count
master_place_data
new_places
news_places
source_data
mappings
continue
mappings.keys.count
exit
mappings
exit
mappings
exit
puts s
s
continue
exit
!source_data[key]['city'].nil?
!mappings.keys.include? key
mappings.keys.include? key
mappings.keys
key
continue
key
continue
key
exit
continue
!source_data[key]['city'].nil?
source_data[key]['city'].nil?
source_data[key]
continue
source_data[key]
key
exit
mappings
continue
mappings
continue
mappings
continue
mappings
exit
new[:address] = result.place_id
new[:address] = result.address
result.boundingbox
result['license']
result.licence
result.license
result.address
result
new
continue
new
continue
new
continue
new
continue
new
continue
new
continue
new
continue
new
continue
new
continue
new
continue
new
continue
new
continue
new
continue
new
continue
new
exit
x.first
x = Geocoder.search('Buffalo, NY, USA')
result.to_json
result
s['city']
source_data[key]
key
new
continue
new
continue
new
exit
key
puts s
s
new
continue
new
continue
new
exit
results
results.first
exit
x.first.license
x.first.licence
x.first.license
x.first.coordinates[1]
x.first.coordinates[0]
x.first.country
x.first.state
x.first.city
x.first.country
x.first.address
x.first
x = Geocoder.search('Buffalo, USA')
x = Geocoder.search('52.32.177.72')
x = Geocoder.search('www.ualberta.ca')
x.first.coordinates
x.coordinates
x.first.lon
x.first.licence
x.first.license
x.first.address
x.first['address']
x.first.to_s
x.first.to_json
x.first
x = Geocoder.search('St. Catharines, Canada')
x.first
x.count
x = Geocoder.search('St. Catharines, ON, Canada')
Geocoder.search('St. Catharines, ON, Canada')
Geocoder.search('Brock University, ON, Canada')
Geocoder.search('Saint Catherine\'s, ON, Canada')
Geocoder.search('St. Catherine\'s, ON, Canada')
results.count
exit
results[2]
results[1]
results.first
results.count
exit
master_place_data
exit
places
new_places
master_place_data.count
master_place_data.keys
new
exit
source_data[key]['city']
key
exit
key
exit
